@use './functions' as *;
@use './mixins' as *;

button.button,
a.button {
  transition: background-color 0.2s ease;
  -webkit-mask-size: cover;
  mask-size: cover;
  &--primary {
    display: inline-flex;
    align-items: center;
    border-radius: 48px;
    font-size: getRem(18);
    line-height: 1;
    font-weight: 600;
    background-color: var(--color-green-50);
    color: var(--color-white);
    padding-left: getRem(40);
    padding-right: getRem(40);
    height: 48px;
    &:hover {
      background-color: var(--color-green-hover);
    }
  }
  &--secondary {
    display: inline-flex;
    align-items: center;
    border-radius: 48px;
    margin-top: getRem(36);
    font-size: getRem(18);
    line-height: 1;
    font-weight: 600;
    background-color: var(--color-violet);
    color: var(--color-white);
    padding-left: getRem(40);
    padding-right: getRem(40);
    height: 48px;
    &:hover {
      background-color: var(--color-violet-hover);
    }
  }
  &--arrow {
    padding-right: getRem(72);
    background-image: url('/img/icons/icon-arrow-right.svg');
    background-repeat: no-repeat;
    background-position: right 36px center;
    background-size: 20px 20px;
  }
}

a.underline {
  text-decoration: underline;
  text-decoration-color: var(--color-gray-40);
  text-decoration-thickness: 1px;
  text-underline-offset: 0.25rem;
  transition: color 0.2s ease, text-decoration-color 0.2s ease;
  &:hover {
    text-decoration-color: transparent;
  }
}

a.not-underline {
  text-decoration: underline;
  text-decoration-color: transparent;
  text-decoration-thickness: 1px;
  text-underline-offset: 0.25rem;
  transition: color 0.2s ease, text-decoration-color 0.2s ease;
  &:hover {
    text-decoration-color: var(--color-gray-40);
  }
}

.paper {
  background-color: var(--color-white);
  padding: getRem(24);
  box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.1);
  border-radius: getRem(8);
}

.tooltip,
.dropdown {
  // --sl-tooltip-background-color: var(--color-white);
  &::part(body) {
    color: var(--color-black);
    background-color: var(--color-white);
    border-radius: getRem(8);
    padding: getRem(24);
    box-shadow: 0px 8px 20px rgba(#002603, 0.16);
    pointer-events: all;
  }
  &::part(arrow) {
    color: var(--color-white);
  }
  & > sl-button {
    @include flex-center;
    transition: background-color 0.2s ease;
    border-radius: 4px;
    padding: 2px 8px;
    .icon {
      margin-left: getRem(8);
    }
    &:hover {
      background-color: color-mix(
        in srgb,
        var(--color-gray-40),
        transparent 75%
      );
    }
  }
  &[open] sl-button {
    background-color: color-mix(in srgb, var(--color-gray-40), transparent 75%);
  }
  &.dropdown {
    & > sl-button {
      cursor: pointer;
      font-size: getRem(14);
      .icon {
        transition: transform 0.2s ease;
      }
    }
    &[open] > sl-button {
      .icon {
        transform: scale(-1);
      }
    }
    & > sl-menu {
      color: var(--color-black);
      background-color: var(--color-white);
      border-radius: getRem(8);
      padding: 0;
      box-shadow: 0px 8px 20px rgba(#002603, 0.16);
      border: none;
      min-width: 180px;
      & > sl-menu-item {
        &[data-checked] {
          &::part(base) {
            background: url('/img/icons/icon-check.svg') no-repeat right 14px
              center / 16px 16px;
          }
        }
        &:focus-visible {
          &::part(base) {
            background-color: transparent;
            color: inherit;
          }
        }
        &::part(base) {
          padding: getRem(8) getRem(12);
        }
        &::part(label) {
          font-size: getRem(14);
          font-weight: 300;
          line-height: 1.5;
        }
        &::part(checked-icon) {
          display: none;
        }
        &:hover {
          background-color: color-mix(
            in srgb,
            var(--color-gray-40),
            transparent 75%
          );
        }
      }
    }
  }
}

.icon-button {
  @include flex-center;
  width: 32px;
  height: 32px;
  border-radius: 4px;
  transition: background-color 0.2s ease;
  position: relative;
  &:hover {
    background-color: color-mix(in srgb, var(--color-gray-40), transparent 75%);
  }
}

.badge {
  height: getRem(18);
  display: block;
  position: absolute;
  top: -2px;
  left: 75%;
  border-radius: getRem(9);
  background-color: blueviolet;
  color: var(--color-white);
  text-align: center;
  font-size: getRem(10);
  line-height: getRem(18);
  font-weight: 600;
  min-width: getRem(18);
  padding: 0 getRem(1) 0 getRem(2);
  z-index: 1;
  &.warning {
    background-color: var(--color-yellow);
  }
  &.success {
    background-color: var(--color-green-50);
  }
}

sl-rating {
  --symbol-color-active: var(--color-yellow);
}
